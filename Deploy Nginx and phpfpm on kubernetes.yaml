1) Create a service to expose this app, the service type must be NodePort, nodePort should be 30012.

2.) Create a config map nginx-config for nginx.conf as we want to add some custom settings for nginx.conf.
a) Change default port 80 to 8096 in nginx.conf.
b) Change default document root /usr/share/nginx to /var/www/html in nginx.conf.
c) Update directory index to index index.html index.htm index.php in nginx.conf.

3.) Create a pod named nginx-phpfpm .
b) Create a shared volume shared-files that will be used by both containers (nginx and phpfpm) also it should be a emptyDir volume.
c) Map the ConfigMap we declared above as a volume for nginx container. Name the volume as nginx-config-volume, mount path should be /etc/nginx/nginx.conf and subPath should be nginx.conf
d) Nginx container should be named as nginx-container and it should use nginx:latest image. PhpFPM container should be named as php-fpm-container and it should use php:7.3-fpm image.
e) The shared volume shared-files should be mounted at /var/www/html location in both containers. Copy /opt/index.php from jump host to the nginx document root inside nginx container, once done you can access the app using App button on the top bar.

---
/tmp/file.yml:
# Create a pod containing the php-based application and nginx, each mounting the 'shared-files' volume to their
# respective /var/www/html directories.
# Create a service named nginx-php-service to expose the app on nodePort.
apiVersion: v1
kind: Service
metadata:
  name: nginx-phpfpm-service
spec:
  selector:
     app: nginx-phpfpm
  type: NodePort
  ports:
  - port: 8096
    targetPort: 8096
    nodePort: 30012
---
# First, create a ConfigMap whose contents are used
# as the nginx.conf file in the web server.
# This server uses /var/www/html as its
# root document directory. When the server gets a
# request for *.php, it will forward that request
# to our PHP-FPM container.
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |

    events {
    
    }

    http {
      log_format main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log        /var/log/nginx/access.log main;
      server {

          listen 8096;
          server_name localhost;

          root /var/www/html;
          index index.html index.htm index.php;

          location / {
          try_files $uri $uri/ =404;
          }

          location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param REQUEST_METHOD $request_method;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;

          }
      }
    }
---
# Create a pod containing the PHP-FPM application (my-php-app)
# and nginx, each mounting the `shared-files` volume to their
# respective /var/www/html directories.
apiVersion: v1
kind: Pod
metadata:
  name: nginx-phpfpm
  labels:
    app: nginx-phpfpm
spec:

  volumes:
# Create the shared files volume to be used in both pods.
  - name: shared-files
    emptyDir: {}
# Add the ConfigMap we declared above as a volume for the pod.
  - name: nginx-config-volume 
    configMap:
      name: nginx-config

  containers:
# Our nginx container, which uses the configuration declared above,
# along with the files shared with the PHP-FPM app.
  - name: nginx-container
    image: nginx:latest
    volumeMounts:
    - name: shared-files
      mountPath: /var/www/html
    - name: nginx-config-volume
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
    ports:
    - containerPort: 8096

# Our php-fpm application 
  - name: php-fpm-container
    image: php:7.2-fpm
    volumeMounts:
    - name: shared-files
      mountPath: /var/www/html
    ports:
    - containerPort: 8096